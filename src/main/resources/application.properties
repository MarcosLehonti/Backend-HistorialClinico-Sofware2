# Nombre de la aplicaciÃ³n
spring.application.name=Backend

## ConfiguraciÃ³n de conexiÃ³n a la base de datos
#spring.datasource.url=jdbc:postgresql://ep-ancient-glitter-a4o8k4xi-pooler.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require
#spring.datasource.username=default
#spring.datasource.password=s9EwYT4zKkJS
#spring.jpa.hibernate.ddl-auto=update

#spring.jpa.show-sql=true

# ConfiguraciÃ³n de Hibernate y JPA
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ConfiguraciÃ³n de CORS (para permitir solicitudes desde el frontend)
# spring.web.cors.allowed-origins=http://localhost:4200
# spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS

# ConfiguraciÃ³n de serializaciÃ³n de Jackson
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.jackson.default-property-inclusion=non_null

# ConfiguraciÃ³n de tiempo de espera para HikariCP
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=60000
spring.datasource.hikari.max-lifetime=1800000

# ConfiguraciÃ³n de correo electrÃ³nico
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=v63094299@gmail.com
spring.mail.password=ytrqtwkjwtqpqfvd
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Nivel de registro para la depuraciÃ³n de correo electrÃ³nico
logging.level.org.springframework.mail=DEBUG
logging.level.org.apache.commons.mail=DEBUG

# Credenciales adicionales de PostgreSQL
# POSTGRES_URL=postgres://default:s9EwYT4zKkJS@ep-ancient-glitter-a4o8k4xi-pooler.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require
# POSTGRES_PRISMA_URL=postgres://default:s9EwYT4zKkJS@ep-ancient-glitter-a4o8k4xi-pooler.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require&pgbouncer=true&connect_timeout=15
# POSTGRES_URL_NO_SSL=postgres://default:s9EwYT4zKkJS@ep-ancient-glitter-a4o8k4xi-pooler.us-east-1.aws.neon.tech:5432/verceldb
# POSTGRES_URL_NON_POOLING=postgres://default:s9EwYT4zKkJS@ep-ancient-glitter-a4o8k4xi.us-east-1.aws.neon.tech:5432/verceldb?sslmode=require
# POSTGRES_USER=default
# POSTGRES_HOST=ep-ancient-glitter-a4o8k4xi-pooler.us-east-1.aws.neon.tech
# POSTGRES_PASSWORD=s9EwYT4zKkJS
# POSTGRES_DATABASE=verceldb



#spring.application.name=Backend
#
# Configuracion de conexion a la base de datos local
spring.datasource.url=jdbc:postgresql://localhost:5433/historialclinico
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
#
## Configuracion de Hibernate y JPA
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#
## Configuracion de CORS (para permitir solicitudes desde el frontend)
spring.web.cors.allowed-origins=http://localhost:4200
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS


spring.jpa.show-sql=true

# Configuracion de GraphQL
spring.graphql.graphiql.enabled=false
spring.graphql.path=/graphql
spring.graphql.schema.printer.enabled=true
spring.graphql.cors.allowed-origins=http://localhost:4200,https://frontend-historial-clinico.vercel.app
spring.graphql.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
